[{"/home/tank/Desktop/todolist/src/index.js":"1","/home/tank/Desktop/todolist/src/App.js":"2","/home/tank/Desktop/todolist/src/reportWebVitals.js":"3","/home/tank/Desktop/todolist/src/containers/Login.js":"4","/home/tank/Desktop/todolist/src/containers/ToDo.js":"5","/home/tank/Desktop/todolist/src/containers/Navbar.js":"6","/home/tank/Desktop/todolist/src/containers/Register.js":"7"},{"size":597,"mtime":1613547412879,"results":"8","hashOfConfig":"9"},{"size":584,"mtime":1613551391559,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609844380533,"results":"11","hashOfConfig":"9"},{"size":1591,"mtime":1613509467405,"results":"12","hashOfConfig":"9"},{"size":3835,"mtime":1613547820622,"results":"13","hashOfConfig":"9"},{"size":254,"mtime":1613547918578,"results":"14","hashOfConfig":"9"},{"size":1924,"mtime":1613551951791,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"njpzjs",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tank/Desktop/todolist/src/index.js",["35","36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n/*import './index.css';\nimport MyToDoList from './App';\nimport reportWebVitals from './reportWebVitals';*/\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport App from './App.js'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["37","38"],"/home/tank/Desktop/todolist/src/App.js",[],"/home/tank/Desktop/todolist/src/reportWebVitals.js",[],["39","40"],"/home/tank/Desktop/todolist/src/containers/Login.js",["41"],"import './Login.css';\nimport React, { useState } from \"react\";\n\n\n\nexport default function Login() {\n  \n  const [loginCredentials, setParams] = useState({email: \"\", password: \"\"});\n\n\n  function validateForm() {\n    return loginCredentials.email.length > 0 && loginCredentials.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(loginCredentials)\n    const requestOptions = {\n      method: 'POST',\n      //mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: 'React POST Request Example',data: loginCredentials})\n  };\n  fetch('http://localhost:3001/login', requestOptions)\n      .then(res => res.text())\n    \n  }\n  function enterEmail(e){\n    const newObj={email:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    console.log(newObj)\n  }\n  function enterPassword(e){\n    const newObj={password:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    console.log(newObj)\n  }\n\n \n\n  return (\n    <div>\n    <div id=\"loginCard\">\n    <form id=\"loginCardItems\" onSubmit={(e)=>handleSubmit(e)} method=\"get\">\n        <label for=\"email\">Email:</label><br></br>\n        <input type=\"text\" name=\"email\" placeholder=\"Enter Email\" onChange={(e)=>enterEmail(e)}></input><br></br>\n        <label for=\"pass\">Password:</label><br></br>\n        <input type=\"text\" name=\"pass\" placeholder=\"Enter Password\" onChange={(e)=>enterPassword(e)}></input><br></br>\n        <button>Login</button>\n    </form> \n    </div>\n    </div>\n    \n  );\n}\n","/home/tank/Desktop/todolist/src/containers/ToDo.js",["42","43","44","45"],"import './App.css';\nimport React from'react';\n\nconst initialState={userInput:\"\",toDoList:[]}\n\n\nfunction inputValidator(arr){\n  var Regex=/^[a-zA-Z0-9_]+$/g\n  var result=arr.some(e=> Regex.test(e));\n  return result\n}\n\n\n\n  \nfunction TimePicker(props){\n  var curr = new Date();\n  var t = curr.toISOString();\n  return(\n    <div className=\"timeSelect\"><label>Set Time:</label>\n    <input type=\"time\" id=\"appt\" name=\"appt\"\n       onChange={props.onChange} defaultValue={t.slice(11,16)} required></input></div>)\n}\n\nfunction Calendar(props){\n  \n  var curr = new Date();\n  var dt = curr.toISOString().substr(0,10);\n  var tt=curr.toISOString().slice(11,16);\n  let [timeline,setTime]= React.useState({date:dt, time:tt});\n  //I want to round the above default time to next closest half hour!\n  console.log(timeline)\n\n function handleTime(e){\n   const newObj={time:e.target.value}\n   setTime(oldObj=>{\n     return {...oldObj,...newObj}\n    })\n   console.log(timeline)\n }\n  \n function handleDate(e){\n    const newObj={date: e.target.value}\n    setTime(oldObj=>{\n      return {...oldObj,...newObj}\n    })\n    console.log(newObj);\n  }\n function handleChange(e){\n   console.log(timeline)\n }\n  return(<div className={props.style}>\n  <label >Enter deadline:</label>\n  <input type=\"date\" id=\"start\" onChange={(e)=>handleDate(e)} defaultValue={dt} name=\"trip-start\"\n       \n    min=\"2020-01-01\" max=\"2021-12-31\"></input><TimePicker onChange={(e)=>handleTime(e)} /><button className=\"timeSelect\" onClick={(e)=>handleChange(e)}>Set Reminder</button></div>)\n  \n}\n\nclass MyToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    // change code below this line\n    this.state={\n      userInput:\"\",\n      toDoList:[],\n      calendarVisible: false,\n      vis:[]\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.clear=this.clear.bind(this)\n    this.updateItem=this.updateItem.bind(this);\n  }\n  clear(){\n    this.setState(initialState)\n  }\n  updateItem(e){\n    let updated=this.state.toDoList.splice(e,1);\n    this.setState({\n      toDoList: this.state.toDoList\n    })\n  }\n  setTime(e){\n    this.state.vis.splice(e,1,!this.state.vis[e])\n    this.setState({\n      calendarVisible: !this.state.calendarVisible\n    })\n    \n  }\n  \n  handleSubmit() {\n    \n    const itemsArray = this.state.userInput.split(',');\n    console.log(itemsArray.length);\n    console.log(itemsArray)\n    if(itemsArray[itemsArray.length-1]==\"\") itemsArray.pop()\n    let visi=[]\n    for (let i=0;i<itemsArray.length;i++){\n      visi.push(true)\n      \n     }\n    this.setState({\n      toDoList: itemsArray,\n      vis: visi\n    });\n  }\n  handleChange(e) {\n    this.setState({\n      userInput: e.target.value\n    });\n  }\n  render() {\n\n    const items = !inputValidator(this.state.toDoList)&&this.state.toDoList.length==0?<h1>Enter some valid tasks separated by commas</h1>:this.state.toDoList.map((d,index)=>d==\"\"?null:<div key={index}><li className=\"btn1\" key={index}>{d}<span onClick={()=>this.setTime(index)} className=\"clock\">&#128337;</span><span className=\"close\" onClick={()=>this.updateItem(index)}>x</span></li><Calendar style={this.state.vis[index]?\"calendar1\":\"calendar2\"}/></div>)\n    return (\n    \n      \n      <div className=\"toDoList\">\n        <h1 id=\"box\">My \"To Do\" List:</h1>\n        <textarea\n          onChange={this.handleChange}\n          value={this.state.userInput}\n          \n          placeholder='Separate Tasks With Commas'\n        />\n        <br />\n        <button id=\"createList\" onClick={this.handleSubmit}>Create List</button>\n        <button id=\"clearList\" onClick={this.clear}>Clear List</button>\n        <div id=\"card\"><ul>{items}</ul></div>\n                                      \n                       \n      </div>\n    );\n  }\n}\n\n\n\n\n  \n\nexport default MyToDoList;","/home/tank/Desktop/todolist/src/containers/Navbar.js",[],"/home/tank/Desktop/todolist/src/containers/Register.js",["46"],{"ruleId":"47","severity":1,"message":"48","line":6,"column":24,"nodeType":"49","messageId":"50","endLine":6,"endColumn":29},{"ruleId":"47","severity":1,"message":"51","line":6,"column":31,"nodeType":"49","messageId":"50","endLine":6,"endColumn":37},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"47","severity":1,"message":"58","line":11,"column":12,"nodeType":"49","messageId":"50","endLine":11,"endColumn":24},{"ruleId":"47","severity":1,"message":"59","line":80,"column":9,"nodeType":"49","messageId":"50","endLine":80,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":98,"column":39,"nodeType":"62","messageId":"63","endLine":98,"endColumn":41},{"ruleId":"60","severity":1,"message":"61","line":116,"column":83,"nodeType":"62","messageId":"63","endLine":116,"endColumn":85},{"ruleId":"60","severity":1,"message":"61","line":116,"column":175,"nodeType":"62","messageId":"63","endLine":116,"endColumn":177},{"ruleId":"47","severity":1,"message":"58","line":11,"column":12,"nodeType":"49","messageId":"50","endLine":11,"endColumn":24},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"'validateForm' is defined but never used.","'updated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]